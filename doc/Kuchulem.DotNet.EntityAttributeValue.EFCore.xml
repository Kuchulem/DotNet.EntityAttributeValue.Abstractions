<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kuchulem.DotNet.EntityAttributeValue.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind">
            <summary>
            The types of values.<br/>
            Each type will comme with specific validators and converters
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.None">
            <summary>
            No type specified, will fallback to <see cref="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.String"/>
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.Integer">
            <summary>
            The stored value will be an <see cref="T:System.Int32"/> or a <see cref="T:System.Int64"/> (16 or 32 bits number).
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.Boolean">
            <summary>
            The value will be a boolean (1 bit number).
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.String">
            <summary>
            The value will be considered a string.
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.Entity">
            <summary>
            The value will refer to an entity, meaning a model from the application.<br/>
            An <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter"/> implementation will be responsible to
            fetch the right entity. See <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter"/> for more
            information.
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.DateTime">
            <summary>
            The value is a to be treated as a DateTime
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind.Number">
            <summary>
            The value will be a <see cref="T:System.Single"/> or <see cref="T:System.Double"/> (32 bits or 64 bits)
            </summary>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind">
            <summary>
            Defines if the value is selected from a list and if
            it is a single or multiple selection
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind.None">
            <summary>
            No list
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind.Single">
            <summary>
            List with single element selection (ie : radio or dropdown)
            </summary>
        </member>
        <member name="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind.Multiple">
            <summary>
            List with multiple element selection (ie : checkboxes or multiselect)
            </summary>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute">
            <summary>
            Abstract class to be extended by EAV Attributes models.
            
            An attribute is the configuration of a property stored in database.
            It defines :
            <list type="bullet">
                <item><see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.AttributeName"/> witch should be unique and describe the attribute. ie : <em>"BookDescription"</em>. It is comparable to a property name</item>
                <item><see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueKind"/> witch describes the type of data stored. See <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind"/> for more information.</item>
                <item><see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueListKind"/> witch defines if the data is selected from a list. See <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind"/> for more information.</item>
            </list>
            <code>
             _______________              __________________
            | EAVEntityBase |            | EAVAttributeBase |
            |_______________|            |__________________|
            |               |            | + AttributeName  |
            |               |            | + ValueKind      |
            |               |            | + ValueListKind  |
            |_______________|            |__________________|
                    ^                              ^
                   /_\                            /_\
                    |                              |
                    |                              |
                    |                              |
             _______|_______              _________|________
            |      Book     |            |  BookAttribute   |
            |_______________|            |__________________|
            | + Id          |            | + Id             |
            | + Title       |            |                  |
            |_______________|            |__________________|
            </code>
            </summary>
        </member>
        <member name="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.AttributeName">
            <summary>
            The name of the attribute, should be considered as a property name and should be unique for an entity.
            </summary>
        </member>
        <member name="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueKind">
            <summary>
            The type of value the <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> for this attribute should store. See <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueKind"/> for more information.
            </summary>
        </member>
        <member name="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueListKind">
            <summary>
            Defines the type of list used to hold the values. See <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind"/> for more information.
            </summary>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavConverter">
            <summary>
            Service interface to convert <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> to a typed and usable value
            by the application.
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavConverter.TryConvertValue(Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue,System.Object@)">
            <summary>
            Converts the raw value from <see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue.RawValue"/> to
            the referenced parameter <em>converted</em>.
            Returns true if conversion was done, false if no converter
            was found and throws an exception if no attribute is provided
            by the <see cref="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue.GetEavAttribute"/> method.
            </summary>
            <param name="value"></param>
            <param name="converted"></param>
            <returns></returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavConverter.TryConvertEntityAttributeValue(Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute,Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavEntity,System.Object@)">
            <summary>
            Tries to convert the values of an entity attributes.<br/>
            When multiple <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> are found for a single
            <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/> only the first one is used as value
            unless the <see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueListKind"/> property
            is <see cref="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind.Multiple"/>. In that case the
            conversion result is an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="attribute"></param>
            <param name="entity"></param>
            <param name="converted"></param>
            <returns></returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavConverter.TryConvertEntityValues(Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavEntity,System.Collections.Generic.Dictionary{Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute,System.Object}@)">
            <summary>
            Converts all <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> for all <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/> of
            an entity and populates a <see cref="T:System.Collections.Generic.Dictionary`2"/> with
            the attribute as key and the convertion result as value.<br/>
            When multiple <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> are found for a single
            <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/> only the first one is used as value
            unless the <see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueListKind"/> property
            is <see cref="F:Kuchulem.DotNet.EntityAttributeValue.Abstractions.EavValueListKind.Multiple"/>. In that case the
            convertion result is an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="entity"></param>
            <param name="converted"></param>
            <returns></returns>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavEntity">
            <summary>
            Defines an entity that's part of the EAV model
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavEntity.GetEavValues">
            <summary>
            Gets the values of that entity as a list of <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/>
            </summary>
            <returns>The values set for that entity</returns>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter">
            <summary>
            Interface for classes that converts a string value (as stored in DB) to
            a usable value and back
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter.Convert(System.String)">
            <summary>
            Converts a string value to a usable value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter.ConvertBack(System.Object)">
            <summary>
            Converts a usable value to a string storable in DB
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverterProvider">
            <summary>
            Interface for converter provider.<br/>
            Provides methods to register and retrieve converters
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverterProvider.GetConverter(Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute)">
            <summary>
            Gets the converter matching the <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/>
            </summary>
            <param name="attribute">The attribute for witch the converter should be found</param>
            <returns>The converter</returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverterProvider.Register(System.Func{Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute,System.Boolean},Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter)">
            <summary>
            Registers a converter for attributes matching the predicate.
            </summary>
            <param name="predicate">Function that returns true when an attribute matches the expected pattern</param>
            <param name="converter"></param>
            <returns>The provider itself for chaining</returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverterProvider.TryGetConverter(Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute,Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter@)">
            <summary>
            Sets the converter for the <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/> to the referenced parameter
            <em>converted</em>. Returns false if no converter where found.
            </summary>
            <param name="attribute"></param>
            <param name="converter"></param>
            <returns>Wether the converter was found or not</returns>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue">
            <summary>
            This abstract class must be extended by models that represents a value
            for an entity's attribute.
            <br/>
            A <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/> is the composition of an <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute"/>
            instance and an entity instance.
            <br/>
            The <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue"/> stores the actual value as a raw string. The
            <see cref="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavRawValueConverter"/> implementations will convert those values
            accordingly to the attribute's <see cref="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavAttribute.ValueKind"/> property.
            </summary>
        </member>
        <member name="P:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue.RawValue">
            <summary>
            The value as stored in raw format.
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue.GetEavAttribute">
            <summary>
            The attribute for witch the value is set
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValue.GetEntity">
            <summary>
            The entity for witch the value is set
            </summary>
        </member>
        <member name="T:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValueListToRawValueConverter">
            <summary>
            Converts a string raw value (as stored in DB) to a list of strings and
            back
            </summary>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValueListToRawValueConverter.Convert(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts a list of strings to a string raw value
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Kuchulem.DotNet.EntityAttributeValue.Abstractions.IEavValueListToRawValueConverter.ConvertBack(System.String)">
            <summary>
            Converts back a string raw value to a list of strings
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
